# 2022/10/20 - Client Meeting W7

Created on: Oct 20th, 2022

Created by: Ali Ladha, Lydia Lin

- User uploads just one image
- AL queries the vector db for 10 images
    - Even more images may be queried
- Frames from the videos.
    - VGG16 creates a vector for the images
        - We should map it to images
        - Map by ID?
    - Images/Videos will be from our blender data, and hopefully from the company data.
    - 
- In the future, it would be possible to add different videos in the DB to be used for the algorithm. (THIS IS AN OPTIONAL FEATURE)
- The AL algorithm will return images
- The user has to be able to label and give the AL with a set of new images
- Queries the DB for the images that are given from the AL.
- There are two different ways we can specify the number of images that are returned:
    - Statically: Only 10/20 etc. images are shown at a time
    - Dynamically: Scroll infinitely to get new images as they scroll down, only load as they scroll down.
- The user will decide when to stop the back-and-forth algorithm running because after some time
    - Either it will get so good that the classification will be correct
    - They are satisfied with how detailed it is
- It is likely that the user will try to identify different things
    - Such as fishes/AMEX Sealing, and so we could reset it
    - Or BETTER, choose to save that instance of an object.
- A centralised DB that is hosted on the Rosen Network, or just a local DB
- There are security reasons why running the script on their local systems, 
    - ROSEN security and data confidentiality
- So the algorithm can be trained/tested on separate videos found online
- Removes the Blender data collection issue we are debating
    - This makes BLENDER OPTIONAL
- Documentation must be legible so that they can expand on the AL going forward.
- Add more functionality for expansion going forward was heavily mentioned.
- ONE-DRIVE IS NOT AN option for security reasons.
    - Alludes to no cloud-based server, hosted off-premises.
    - Highly not recommended
- Many users might try to classify images/videos with same labels
    - Might re-use instances of AL algorithm
- More than one user might be using the web application at a time
    - Not an issue as there might be instances of a db on each machine
    
----------------
The inspection video:
1 million+ images
1 project 1 vidio (project in the comany)
1 inspection 1 video
(using blender asset to render images is optional)

Iteration:
->second: train on 11(1+10sent back) images
-> every iteration is defined by clicking "submit"

10 images back: should be define (user or hard code?) 
=> he doesn't care the number per display as long as is user friendly. Can be flexible.

Stop of iterations? (When is the algorithm with 1 target consider done training?)
->user decides or classify all correct
-> display model info to the user, so they know when to stop (suggestion: info on performace of the label data)
-> there are 496 dimentions in vgg16; the algorithm cannot be displayed as in a 2D graph 

AL: yes other object
Start from algo from 0
-> Once this algorithm is done training on fish, achieve it. And reset the algorithm to train on cracks...

2 people(users/data scientists) training a fish? or only 1. (an object a person or an object train by multiple people?)
-> they work in teams.
-> everyone gets a different section of the inspection video. (i.g. person1: 0- 10min timestamp; persson2: 11-20mins ...)
-> person1 will be training on fish & archieve. Then training cracking & archieve...
-> person2 will do the same.
-> the archieved fish-algo from person1 should be shared with person2 before person2 starts training his algo on fish.

Algo transfer/ db problem:
-> no cloud
-> one drive is cloud too
-> agreement: download-able, cope & paste  (make this easy: cuz this is not the focus of this project)

2secondary interest: perfermance (how many iteration, not the time) (not the main focus)

metadata: time stamp to a imgage
-----------
Questions not asked yet:
- query: the most likely to be fishes?
- scope?
- Rosen will add xxxooo supervise unsupervise: in the future?
